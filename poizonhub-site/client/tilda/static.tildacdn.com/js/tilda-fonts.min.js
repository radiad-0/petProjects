!(function () {
  var tf_trycounter = 0,
    tf_showtexttimer = 0;
  function tf_tryinit() {
    ++tf_trycounter > 9 ||
      ("undefined" != typeof TildaFonts
        ? tildafonts_init()
        : setTimeout(tf_tryinit, 20));
  }
  function tf_loadComplete() {
    clearTimeout(tf_showtexttimer),
      tf_removestylehide(),
      (window.tildafonts_loaded = !0);
  }
  function tf_removestylehide() {
    var tf_style = document.getElementById("tildafonts-loading");
    void 0 !== tf_style &&
      null != tf_style &&
      tf_style.parentNode.removeChild(tf_style);
  }
  function tildafonts_init() {
    window.tildafonts_loaded = !1;
    var head = document.head || document.getElementsByTagName("head")[0],
      tf_stylehidetext = document.createElement("style");
    (tf_stylehidetext.innerHTML = "body *{color:transparent!important;}"),
      tf_stylehidetext.setAttribute("id", "tildafonts-loading"),
      head.insertBefore(tf_stylehidetext, head.firstChild),
      (tf_showtexttimer = setTimeout(
        function () {
          tf_removestylehide();
        },
        "y" === window.tildafontsswap ? 50 : 3e3
      ));
    var userAgent = (
        navigator.userAgent ||
        navigator.vendor ||
        window.opera
      ).toLowerCase(),
      browsers = {
        opera: "version",
        firefox: "firefox",
        safari: "version",
        msie: "msie",
      },
      oses = ["linux", "windows", "iphone", "mac os"],
      browser = "default",
      version = 0,
      posit = -1,
      os = "default",
      fontpriority = "woff",
      swap = "y" === window.tildafontsswap ? "&display=swap" : "",
      chromeMatched =
        /^Mozilla\/5\.0 \(.+[^)]+\) AppleWebKit\/[\d.]+ \(KHTML, like Gecko\) C[hrome|riOS]+\/(\d+)[\d.]+[ Mobile]*[/15E148]*[\sYaBrowser/[\d.]+]?[\sYowser/[\d.]+]? Safari\/[\d.]+[\sEdg/[\d.]+]?[\sOPR/[\d.]+]?$/.exec(
          navigator.userAgent
        ),
      params;
    if (chromeMatched) {
      var major;
      parseInt(chromeMatched[1], 10) >= 36 && (fontpriority = "woff2");
    } else {
      for (var i in browsers)
        if (userAgent.indexOf(i) > -1) {
          (posit = userAgent.indexOf(browsers[i])),
            (browser = i),
            (version = userAgent.substring(
              posit + browsers[i].length + 1,
              posit + browsers[i].length + 3
            ));
          break;
        }
      for (var j = 0; j < oses.length; j++)
        if (userAgent.indexOf(oses[j]) > -1) {
          os = oses[j];
          break;
        }
      switch (
        ("default" === browser &&
          userAgent.indexOf("instagram") > -1 &&
          userAgent.indexOf("iphone") > -1 &&
          ((posit = userAgent.indexOf("iphone os")),
          (browser = "safari"),
          (os = "iphone"),
          (version = userAgent.substring(posit + 10, posit + 12))),
        browser)
      ) {
        case "firefox":
          version >= 39 && (fontpriority = "woff2");
          break;
        case "safari":
          "iphone" === os
            ? version >= 10 && (fontpriority = "woff2")
            : version >= 12 && (fontpriority = "woff2");
          break;
        case "opera":
          version >= 23 && (fontpriority = "woff2");
      }
    }
    tf_createLink(
      "https://fonts.tildacdn.com/get/",
      "?fonts=" + TildaFonts + "&format=" + fontpriority + swap,
      !0,
      head
    );
  }
  function tf_createLink(host, params, checkError, head) {
    var link = document.createElement("link");
    if (
      (link.addEventListener("load", function () {
        tf_loadComplete();
      }),
      checkError)
    ) {
      link.addEventListener("error", function () {
        tf_createLink("https://fonts2.tildacdn.com/get/", params, !1, head);
      });
      var perf = window.performance.timing,
        speedTest = perf.responseEnd - perf.connectStart,
        timer = 2e3;
      switch (!0) {
        case speedTest <= 300:
          timer = 2e3;
          break;
        case speedTest <= 1e3:
          timer = 7e3;
          break;
        case speedTest <= 2e3:
          timer = 2e4;
          break;
        case speedTest <= 3e3:
          timer = 3e4;
          break;
        case speedTest > 3e3:
          timer = 45e3;
      }
      setTimeout(function () {
        !1 === window.tildafonts_loaded &&
          tf_createLink("https://fonts2.tildacdn.com/get/", params, !1, head);
      }, timer);
    }
    link.setAttribute("href", host + params),
      link.setAttribute("rel", "stylesheet"),
      link.setAttribute("type", "text/css"),
      link.setAttribute("media", "all"),
      head.insertBefore(link, head.firstChild);
  }
  tf_tryinit();
})();
