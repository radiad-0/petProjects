import {bot} from "./bot.js";
import {chooseCashAccountOptions, showMainMenuOptions} from "./options.js";
import {chatbotManagement} from "./chatbotManagement.js";
import {processingCommand} from "./processingCommand.js";

const textCommands = {
    '/start': async function (userData) {
        await bot.sendMessage(userData.from.id, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userData.from.first_name}!`, showMainMenuOptions)
    },
    '–ö—É–ø–∏—Ç—å —é–∞–Ω–∏ üí±': async function (userData) {
        await bot.sendMessage(userData.from.id, `–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: ${chatbotManagement.almaz.courseForPeople}`)
        await bot.sendMessage(userData.from.id, '–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è —é–∞–Ω–µ–π:', chooseCashAccountOptions)
        chatbotManagement[userData.from.id].command = 'textCommand'
    },
    '–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å —é–∞–Ω—è üíπ': async function (userData) {
        if (userData.from.id === chatbotManagement.almaz.chatId) {
            chatbotManagement[userData.from.id].command = 'start'
            userData.text = "I'm GOD"
            await processingCommand(userData)
        }
        else {
            await bot.sendMessage(userData.from.id, `–ö—É—Ä—Å: ${chatbotManagement.almaz.courseForPeople}`)
        }
    },
    '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ ü§≥': async function (userData) {
        chatbotManagement[userData.from.id].command = 'textCommand'
        await bot.sendMessage(userData.from.id, '–ù–∞–ø–∏—à–∏—Ç–µ –µ–º—É: @lee_jao')
    },
    default: async function (msg) {
        await bot.sendMessage(msg.from.id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞')
    }
}

export async function processingTextCommands(msg, executeDefault = true) {
    if (msg.text in textCommands) {
        await textCommands[msg.text](msg)
        chatbotManagement[msg.from.id].command = 'textCommand'
        return true
    }
    else if (executeDefault) {
        await textCommands.default(msg)
        return true
    }
    else return false
}